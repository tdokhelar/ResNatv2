gogo_mail_draft_automated:
    path: /test-emails/automated/{mailType}
    defaults: { _controller: App\Controller\MailTestController::draftAutomatedAction }

gogo_mail_draft:
    path: /test-emails
    defaults: { _controller: App\Controller\MailTestController::draftAction }

gogo_mail_send_test:
    path: /test-emails/send/{mailType}
    defaults: { _controller: App\Controller\MailTestController::sendTestAction }

gogo_elements_list_columns:
    path: /admin/elements/list/columns
    requirements:
        methods: POST
    defaults: { _controller: App\Controller\Admin\ElementAdminListController::saveColumnListAction }

gogo_core_help:
    path: /help
    defaults: { _controller: App\Controller\CoreController::helpAction }

# BULK ACTIONS
gogo_bulk_actions_index:
    path: /admin/bulkActions/index
    defaults: { _controller: App\Controller\Admin\BulkActions\BulkCoreController::indexAction }

gogo_bulk_actions_delete_element_reported:
    path: /admin/bulkActions/deleteElementReportedAsNoMoreExisting
    defaults: { _controller: App\Controller\Admin\BulkActions\ModerationActionsController::deleteElementReportedAsNoMoreExistingAction }

gogo_bulk_actions_update_gamification:
    path: /admin/bulkActions/updateGamification
    defaults: { _controller: App\Controller\Admin\BulkActions\DataUpdateActionsController::updateGamificationAction }

gogo_bulk_actions_detect_duplicates:
    path: /admin/bulkActions/detectDuplicates
    defaults: { _controller: App\Controller\Admin\BulkActions\DuplicatesDetectionController::detectDuplicatesAction }

# DUPLICATES
gogo_duplicates_index:
    path: /duplicates
    defaults: { _controller: App\Controller\DuplicatesManagementController::indexAction }

gogo_merge_element:
    path: /duplicates/merge
    defaults: { _controller: App\Controller\DuplicatesManagementController::mergeDuplicateAction }
    requirements:
        methods: POST
        
gogo_mark_as_non_duplicate:
    path: /duplicates/mark-as-non-duplicate
    defaults: { _controller: App\Controller\DuplicatesManagementController::markAsNonDuplicateAction }
    requirements:
        methods: POST

# IMPORT
gogo_element_import_available_options:
    path:     /admin/import/available-options
    defaults: { _controller: App\Controller\ImportController::availableOptionsAction }

gogo_import_state:
    path:     /admin/import/{id}/state
    defaults: { _controller: App\Controller\ImportController::currStateAction }
    requirements:
        methods: GET

gogo_element_generate:
    path:     /generate/{nombre}/{generateVotes}
    controller: App\Controller\ImportController::generateRandomAction
    defaults:
        nombre: '1'
        generateVotes: '0'

gogo_element_test_export:
    path: /elements/{id}/test-export
    controller: App\Controller\ImportController::testElementExportAction
    
gogo_interoperability_changes_history:
    path: /admin/interoperability/{id}/changes-history
    defaults:
        _sonata_admin: 'admin.dynamic_imports'
    controller: App\Controller\Admin\ImportAdminController::changesHistoryAction
    
gogo_interoperability_changes_history_export:
    path: /admin/interoperability/{id}/changes-history-export
    defaults:
        _sonata_admin: 'admin.dynamic_imports'
    controller: App\Controller\Admin\ImportAdminController::exportChangesHistoryAction

# OSM
gogo_send_to_osm:
    path: /elements/{id}/send-to-osm
    controller: App\Controller\ElementSynchronizationController::sendToOsmAction

# CONFIGURATION IMPORT/EXPORT
gogo_config_import:
    path: /admin/config/import
    defaults: { _controller: App\Controller\Admin\BulkActions\ConfigurationImportExportController::configImport }
gogo_config_export:
    path: /admin/config/export
    defaults: { _controller: App\Controller\Admin\BulkActions\ConfigurationImportExportController::configExport }


# TAXONOMY
gogo_edit_taxonomy:
    path: /admin/taxonomy/save
    controller: App\Controller\Admin\CategoryAdminController::editTaxonomyAction
    defaults:
        _sonata_admin: 'admin.categories'
    methods: POST
    
# CONFIGURATION AUTHORIZED PROJECTS
gogo_new_apikey:
    path: /admin/authorizedproject/{id}/new-api-key
    defaults:
        _sonata_admin: 'admin.authorized_projects'
    controller: App\Controller\Admin\AuthorizedProjectController::newAPIKeyAction
    
gogo_authorized_project_changes_history:
    path: /admin/authorizedproject/{id}/changes-history
    defaults:
        _sonata_admin: 'admin.authorized_projects'
    controller: App\Controller\Admin\AuthorizedProjectController::changesHistoryAction

gogo_authorized_projects_changes_history:
    path: /admin/authorizedproject/changes-history
    defaults:
        _sonata_admin: 'admin.authorized_projects'
    controller: App\Controller\Admin\AuthorizedProjectController::changesHistoryAction
    
gogo_authorized_project_changes_history_export:
    path: /admin/authorizedproject/{id}/changes-history-export
    defaults:
        _sonata_admin: 'admin.authorized_projects'
    controller: App\Controller\Admin\AuthorizedProjectController::exportChangesHistoryAction
    
gogo_authorized_projects_changes_history_export:
    path: /admin/authorizedproject/changes-history-export
    defaults:
        _sonata_admin: 'admin.authorized_projects'
    controller: App\Controller\Admin\AuthorizedProjectController::exportChangesHistoryAction
